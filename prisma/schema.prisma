// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  image_url     String?  
  email         String         @unique
  password      String  
  conversations Conversation[] @relation("UserConversations")
  messages      Message[]
  videos        Video[]
  contacts      User[]         @relation("UserContacts")
  contactOf     User[]         @relation("UserContacts")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Video {
  id  String   @id @default(uuid())
  url_video String 
  duration  Float 
  expiresAt   DateTime?
  description     String?
  private   Boolean @default(true)
  owner   User  @relation(fields : [ownerId], references:[id])
  ownerId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Conversation {
  id        Int   @id @default(autoincrement())
  subject   String?  
  lastMessage String?
  unreadMessages Int? 
  users     User[]     @relation("UserConversations")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  messages  Message[]
}

model Message {
  id             Int          @id @default(autoincrement())
  content        String
  sender         User         @relation(fields: [senderId], references: [id])
  senderId       Int
  conversation   Conversation @relation(fields: [conversationId], references: [id],onDelete: Cascade)
  conversationId Int
  createdAt      DateTime     @default(now())
}

